#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 1000  

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int binarySearch(int arr[], int left, int right, int target) {
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) 
            return mid;
        if (arr[mid] < target) 
            left = mid + 1;
        else 
            right = mid - 1;
    }
    return -1;
}

int main() {
    int arr[SIZE];
    srand(time(0));  

    for (int i = 0; i < SIZE; i++) {
        arr[i] = rand() % 10000;
    }

    bubbleSort(arr, SIZE);

    int target = arr[rand() % SIZE];

    clock_t start, end;
    double cpu_time_used;

    start = clock();
    int result = binarySearch(arr, 0, SIZE - 1, target);
    end = clock();

    cpu_time_used = ((double)(end - start)) / CLOCKS_PER_SEC;

    if (result != -1)
        printf("Element %d found at index %d\n", target, result);
    else
        printf("Element %d not found\n", target);

    printf("Time taken for Binary Search: %f seconds\n", cpu_time_used);

    return 0;
}
